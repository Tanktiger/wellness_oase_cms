<?php

namespace WO\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository
{
    public function getPageBySlug($slug) {
        $q = $this
            ->createQueryBuilder('p')
            ->select('p')
            ->where('p.slug = :slug')
            ->setParameter('slug', $slug)
            ->getQuery();

        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            $page = $q->getSingleResult();
        } catch (NoResultException $e) {
            $message = sprintf(
                'Unable to find an the page object identified by slug: "%s".',
                $slug
            );
            throw new NoResultException($message, 0, $e);
        }

        return $page;
    }

    public function getSinglePageByType($type) {
        $q = $this
            ->createQueryBuilder('p')
            ->select('p')
            ->where('p.type LIKE ?1')
            ->setParameter(1, '%'.$type.'%')
            ->setMaxResults(1)
            ->getQuery();

        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            $page = $q->getSingleResult();
        } catch (NoResultException $e) {
            $message = sprintf(
                'Unable to find an the page object identified by type: "%s".',
                $type
            );
            throw new NoResultException($message, 0, $e);
        }

        return $page;
    }

    public function getPageFromParentAndSlug($parentSlug, $slug) {
        $q = $this
            ->createQueryBuilder('p')
            ->select('p')
            ->leftJoin('p.parent', 'pp')
            ->where('p.slug = :slug')
            ->andWhere('pp.slug = :parentslug')
            ->setParameter('slug', $slug)
            ->setParameter('parentslug', $parentSlug)
            ->getQuery();

        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            $page = $q->getSingleResult();
        } catch (NoResultException $e) {
            $message = sprintf(
                'Unable to find an the page object identified by slug: "%s".',
                $slug
            );
            throw new NoResultException($message, 0, $e);
        }

        return $page;
    }
}
